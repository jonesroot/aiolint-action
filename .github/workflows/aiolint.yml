name: AIOLint - All-in-One Linter

on:
  push:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          # Install Python dependencies
          pip3 install pylint flake8 black isort

          # Install Node.js dependencies
          npm install -g eslint prettier

          # Install Go dependencies
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2

          # Install PHP dependencies
          composer global require squizlabs/php_codesniffer friendsofphp/php-cs-fixer

          # Install system-wide linters
          sudo apt-get install -y cppcheck shellcheck shfmt

          # Install Hadolint
          wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x /usr/local/bin/hadolint

      - name: Setup Rust (Optional)
        if: needs.rust == 'true'
        run: |
          rustup update
          rustup component add rustfmt clippy

      - name: Check & Fix Code Formatting
        run: |
          # Python formatting
          black .
          isort .

          # JavaScript/TypeScript linting and fixing
          eslint . --fix || true

          # Go linting
          golangci-lint run || true

          # PHP linting
          phpcs --standard=PSR12 . || true

          # Rust formatting and linting (if using Rust)
          cargo fmt || true
          cargo clippy || true

          # C/C++ linting
          cppcheck . || true

          # Dockerfile linting
          hadolint Dockerfile || true

      - name: Run AIOLint
        run: python3 scripts/lint_checker.py

      - name: Automatic Repair (Optional)
        if: success() || failure()
        run: python scripts/fix_code.py
